//Gradle build for core LaTiS code.

apply plugin: 'scala'
apply plugin: 'eclipse'
apply plugin: 'ivy-publish'

//Define the release version. Used for published jar.
//TODO: get from latis.properties?
version = '2.8.8'

//Define Java version for generated class files.
targetCompatibility = 1.6

//Repositories for dependencies.
repositories {
    ivy {
      url "http://dsweb:8080/ivy"
    }
    mavenCentral()
}

dependencies {
    //providedCompile "javax.servlet:servlet-api:2.5" //not deployed
    compile "javax.servlet:servlet-api:2.5"
    
    compile 'org.scala-lang:scala-library:2.10.4'
    
    //Support for logging
    compile 'com.typesafe:scalalogging-slf4j_2.10:1.1.0'
    compile 'ch.qos.logback:logback-classic:1.0.13'
    
    //JSON from Play
    compile 'com.typesafe.play:play-json_2.10:2.4.0-M1'
    
    testCompile 'junit:junit:4.+'
    testCompile 'org.apache.derby:derby:10.10.1.1'
	
	//Support for writing png images
	compile 'jfree:jfreechart:1.0.12'
	
	//iCalendar support
	compile 'net.sf.biweekly:biweekly:0.3.2'
	
	//apache math commons
	compile 'org.apache.commons:commons-math:2.2'
	
	//ehcache
	compile 'net.sf.ehcache:ehcache:2.9.0'
	
}

// Affects several tasks: compileScala, compileTestScala, compileSourceSetScala
// see section "Tasks" in http://gradle.org/docs/current/userguide/scala_plugin.html
tasks.withType(ScalaCompile) {
	
	// build optimization: disabling Ant enables Zinc-based compiler with support for incremental compilation
	// see section "Incremental Compilation" in http://gradle.org/docs/current/userguide/scala_plugin.html
	scalaCompileOptions.useAnt = false
}


//Define the Ivy repository for publishing build artifacts.
group = 'lasp'
publishing {
    publications {
        ivyJava(IvyPublication) {
            from components.java
        }
    }
    repositories {
        ivy {
            url "/data_systems/ivy"
        }
    }
}

// Helper function - only run the passed configClosure
// if the task is actually going to be executed. Allows
// for easier conditional configuration.
def ifTask(task, configClosure) {
	gradle.taskGraph.whenReady { graph ->
		if (graph.hasTask(task)) {
			project.configure(task, configClosure)
		}
	}
}

task wrapper(type: Wrapper) { gradleVersion = '2.3' }

task compileWarnings (dependsOn: compileScala) { self ->
	description "Run the compileScala task, but configure it to show more warnings ('-feature' flag)"
	ifTask(self) {
		// configure the compileScala task to run scalac with the "-feature" option
		compileScala {
			scalaCompileOptions.additionalParameters = ["-feature"]
		}
	}
}

